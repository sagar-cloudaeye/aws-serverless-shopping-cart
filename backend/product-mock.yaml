AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  product-service

  SAM Template for mock product-service
Parameters:
  DdApiKey:
    Type: String
    Description: The Datadog API key, which can be found from the APIs page (/organization-settings/api-keys).
    NoEcho: true
  DdSite:
    Type: String
    Default: datadoghq.com
    Description: Define your Datadog Site to send data to. Possible values are `datadoghq.com`, `datadoghq.eu`, `us3.datadoghq.com`, `us5.datadoghq.com` and `ddog-gov.com`.
    AllowedPattern: .+
    ConstraintDescription: DdSite is required
  AllowedOrigin:
    Type: 'String'

Globals:
  Function:
    Timeout: 5
    Tracing: Active
    AutoPublishAlias: live
    Runtime: python3.8
    MemorySize: 256
    Environment:
      Variables:
        LOG_LEVEL: 'DEBUG'
        ALLOWED_ORIGIN: !Ref AllowedOrigin
        POWERTOOLS_SERVICE_NAME: product-mock
        POWERTOOLS_METRICS_NAMESPACE: ecommerce-app
  Api:
    EndpointConfiguration: REGIONAL
    TracingEnabled: true
    OpenApiVersion: '2.0'
    Cors:
      AllowMethods: "'OPTIONS,POST,GET'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: !Sub "'${AllowedOrigin}'"

Resources:
  GetProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetProduct
      CodeUri: product-mock-service/
      Handler: get_product.lambda_handler
      Events:
        ListCart:
          Type: Api
          Properties:
            Path: /product/{product_id}
            Method: get
      Environment:
        Variables:
          DD_LAMBDA_HANDLER: get_product.lambda_handler
          DD_TRACE_ENABLED: true
          DD_API_KEY: !Ref DdApiKey
          DD_CAPTURE_LAMBDA_PAYLOAD: true
          DD_LOG_LEVEL: DEBUG
          DD_SERVICE: datadog-serverless-sample-app
          DD_ENV: dev
          DD_VERSION: 1.0.0
          DD_SITE: !Ref DdSite

  GetProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetProducts
      CodeUri: product-mock-service/
      Handler: get_products.lambda_handler
      Events:
        ListCart:
          Type: Api
          Properties:
            Path: /product
            Method: get
      Environment:
        Variables:
          DD_LAMBDA_HANDLER: get_product.lambda_handler
          DD_TRACE_ENABLED: true
          DD_API_KEY: !Ref DdApiKey
          DD_CAPTURE_LAMBDA_PAYLOAD: true
          DD_LOG_LEVEL: DEBUG
          DD_SERVICE: datadog-serverless-sample-app
          DD_ENV: dev
          DD_VERSION: 1.0.0
          DD_SITE: !Ref DdSite

  GetProductApiUrl:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: /serverless-shopping-cart-demo/products/products-api-url
      Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'

Outputs:
  ProductApi:
    Description: 'API Gateway endpoint URL for Prod stage for Product Mock Service'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'
